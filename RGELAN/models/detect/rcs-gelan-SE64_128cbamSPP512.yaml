# YOLOv9

# parameters
nc: 1  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# gelan backbone
backbone:
  [
   # conv down
   [-1, 1, RepVGG, [64, 3, 2]],  # 0-P1/2

   # **SEBlock inserted after RepVGG (Index 0)**
   [-1, 1, SEBlock, [64]],  # 1 (New SEBlock)

   # conv down
   [-1, 1, RepVGG, [128, 3, 2]],  # 2-P2/4 (Updated index)

   # **SEBlock inserted after RepVGG (Index 2)**
   [-1, 1, SEBlock, [128]],  # 3 (New SEBlock)

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 4 (Updated index)

   # avg-conv down
   [-1, 1, ADown, [256]],  # 5-P3/8

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 6

   # avg-conv down
   [-1, 1, ADown, [512]],  # 7-P4/16

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 8

   # avg-conv down
   [-1, 1, ADown, [512]],  # 9-P5/32

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 10
  ]

# gelan head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [512, 256]],  # 11

   # CBAM attention block
   [-1, 1, CBAM, [512]],  # 12 (New CBAM block added)

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  
   [[-1, 8], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 15

   # CBAM block after RepNCSPELAN4 (Index 15)
   [-1, 1, CBAM, [512]],  # 16

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 17
   [[-1, 6], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 19 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],  
   [[-1, 16], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 22 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],  
   [[-1, 12], 1, Concat, [1]],  # cat head P5

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 25 (P5/32-large)

   # detect
   [[19, 22, 25], 1, DDetect, [nc]],  # DDetect(P3, P4, P5)
  ]
