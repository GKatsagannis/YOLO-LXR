# YOLOv9

# parameters
nc: 1  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors: 3

# gelan backbone
backbone:
  [
   # conv down
   [-1, 1, RepVGG, [64, 3, 2]],  # 0-P1/2

   # conv down
   [-1, 1, RepVGG, [128, 3, 2]],  # 1-P2/4

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 2

   # avg-conv down
   [-1, 1, ADown, [256]],  # 3-P3/8

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 4

   # avg-conv down
   [-1, 1, ADown, [512]],  # 5-P4/16

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 6

   # avg-conv down
   [-1, 1, ADown, [512]],  # 7-P5/32

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 8
  ]

# gelan head
head:
  [
   # elan-spp block (Output: 512 channels)
   [-1, 1, SPPELAN, [512, 256]],  # 9

   # Fix: Ensure ResidualBlock matches input/output channels
   [-1, 1, ResidualBlock, [512, 512, 1]],  # 10 (Updated from [256, 256, 1] to [512, 512, 1])

   # CBAM attention block
   [-1, 1, CBAM, [512]],  # 11 (Updated index)

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 13 (Updated index)

   # **CBAM block inserted after RepNCSPELAN4**
   [-1, 1, CBAM, [512]],  # 14 (Updated index)

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 15 (Updated index)
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 17 (P3/8-small, Updated index)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],  
   [[-1, 14], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 20 (P4/16-medium, Updated index)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],  
   [[-1, 11], 1, Concat, [1]],  # cat head P5 (Updated index)

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 23 (P5/32-large, Updated index)

   # detect
   [[17, 20, 23], 1, DDetect, [nc]],  # DDetect(P3, P4, P5) (Updated indices)
  ]
